mensagem = input("Digite a sua mensagem: ")
print(mensagem)

#1º passo: transformar a mensagem para ascii

mensagem_transformada_em_ascii = []

def conversor_mensagem_ascii(mensagem):
    for c in mensagem:
        mensagem_transformada_em_ascii.append(ord(c))
        
conversor_mensagem_ascii(mensagem)
print(mensagem_transformada_em_ascii)        

#2º passo: escolher os primos

primo_um = int(input("Digite um primo: "))
primo_dois = int(input("Digite um primo: "))

#3º passo: definindo o n

n = primo_um * primo_dois

#4º passo: definindo a função totiente

def totiente(p1, p2):
    return (p1-1) * (p2-1)

#5° passo: calculando possíveis valores para a chave pública

def mdcEstendido(a, b):
    #Caso Base
    if a == 0 :
        return b,0,1
             
    mdc,x1,y1 = mdcEstendido(b%a, a)
     
    x = y1 - (b//a) * x1
    y = x1
     
    return mdc,x,y

def primos_entre_si(totiente):
    primos = []
    for i in range(2, totiente):
        if mdcEstendido(totiente, i)[0] == 1:
            if i > 1 and i < totiente:
                primos.append(i)
    return primos

print(primos_entre_si(totiente(primo_um, primo_dois)))

#6º passo: escolhendo a chave pública

chave_publica = int(input("Escolha um número a dentro dos possíveis valores acima: "))
print('chave pública: ',chave_publica)

#7º passo: codificando a mensagem

mensagem_criptografada = []

def criptografa_mensagem(letra, chave_publica, n):
    return (letra ** chave_publica) % n

for letra in mensagem_transformada_em_ascii:
    mensagem_criptografada.append(criptografa_mensagem(letra, chave_publica, n))
    
print('mensagem criptografada: ', mensagem_criptografada)

#8º passo: calcular a chave privada

def calcula_chave_privada(a, totiente):
    return mdcEstendido(a, totiente)[1]

chave_privada = calcula_chave_privada(chave_publica, totiente(primo_um, primo_dois))
print('chave privada: ', chave_privada)

#9 passo: descodificando a mensagem

mensagem_descriptografada = []

def descriptografa_mensagem_ascii(letra, chave_privada, n):
    return int((letra ** chave_privada) % n)

for letra in mensagem_criptografada:
    mensagem_descriptografada.append(descriptografa_mensagem_ascii(letra, chave_privada,  n))
    
print('mensagem descriptografada: ',mensagem_descriptografada)


https://hackingnaweb.com/criptografia/entendendo-algoritmo-rsa-de-verdade/
